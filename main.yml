name: iOS starter workflow               
on:             
  push:       
    branches:           
      - main                  
  pull_request:    
    branches:    
      - main  
env:
  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }} 
jobs:
  build: 
    name: Build and Test default scheme using any available iPhone simulator
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: check Xcode version
        run: /usr/bin/xcodebuild -version
      - name: Install the Apple certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.P12_PASSWORD }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $PP_PATH

          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
          mv BKiOS.json $RUNNER_TEMP/AuthKey.json
          cd $RUNNER_TEMP
          ls
          cat $RUNNER_TEMP/AuthKey.json
          
      - name: check Xcode version
        run: /usr/bin/xcodebuild -version
      - name: Copy Podfile
        run: cp -r SignIn/Podfile .
      - name: Install CocoaPods
        run: |
          sudo gem install cocoapods
          gem install fastlane
          pod repo list
          pod setup
      - name: Install dependencies
        run: pod install --project-directory=SignIn/
        
      - name: Check current directory
        run: |
          pwd
          ls -al
      - name: Navigate to SignIn folder
        run: |
          cd SignIn/
          ls
          
      - name: Upload to TestFlight
        env:
          APP_STORE_CONNECT_API_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
          APP_STORE_CONNECT_API_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_API_ISSUER_ID }}
          PILOT_APPLE_ID: ${{ secrets.APP_STORE_CONNECT_USERNAME }}
          FASTLANE_APPLE_API_KEY_PATH: ${{ runner.temp }}/AuthKey.json
          PILOT_APP_IDENTIFIER: ${{ secrets.APP_BUNDLE_ID }}
          FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}
          APP_PATH: ${{ runner.temp }}/build/SignIn.ipa
          ARCHIVE_PATH: ${{ runner.temp }}/SignIn.xcarchive
          OUTPUT_PATH: ${{ runner.temp }}/build
          APPLE_ID_UNI: $${{ secrets.APPLE_ID_UNI }}
        run: |
          cd SignIn/
          fastlane betaLane
          
      - name: Upload IPA to Nexus
        run: |
          curl -u ${{ secrets.NEXUS_USERNAME }}:${{ secrets.NEXUS_PASSWORD }} \
               --upload-file $RUNNER_TEMP/build/SignIn_$(git rev-parse --short HEAD)_$(date +'%m%d%Y')_b1.ipa \
               https://spanartifacts.spanllc.com/repository/Android/iOS/Tax990/

      - name: Clean up workspace
        run: |
          rm -rf $RUNNER_TEMP/
